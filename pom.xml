<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>edu.kit.informatik.artemis</groupId>
	<artifactId>build-sample</artifactId>
	<name>Build Example</name>
	<description>Just some Build Example to cache all build dependencies.</description>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<scaConfigDirectory>${project.basedir}/staticCodeAnalysisConfig</scaConfigDirectory>
		<analyzeTests>false</analyzeTests>
	</properties>
	<parent>
		<groupId>edu.kit.kastel.sdq.artemis</groupId>
		<artifactId>test-framework-parent</artifactId>
		<version>0.18-SNAPSHOT</version>
	</parent>
	<repositories>
		<repository>
			<id>gitlab-maven</id>
			<url>https://git.scc.kit.edu/api/v4/projects/24947/packages/maven</url>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>edu.kit.kastel.sdq.artemis</groupId>
			<artifactId>test-framework</artifactId>
		</dependency>
		<dependency>
			<groupId>edu.kit.kastel.sdq.artemis</groupId>
			<artifactId>test-framework-checkstyle</artifactId>
		</dependency>
	</dependencies>
	<build>
		<sourceDirectory>${project.basedir}/assignment/src</sourceDirectory>
		<testSourceDirectory>${project.basedir}/test</testSourceDirectory>
		<testResources>
			<testResource>
				<directory>${project.basedir}/test</directory>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin-version}</version>
				<configuration>
					<argLine>-Dfile.encoding=UTF-8</argLine>
					<systemProperties>
						<property>
							<name>sourceDirectory</name>
							<value>${project.build.sourceDirectory}</value>
						</property>
					</systemProperties>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>${spotbugs-maven-plugin-version}</version>
				<configuration>
					<!-- Do not analyze the files in the test directory -->
					<includeTests>${analyzeTests}</includeTests>
					<xmlOutput>true</xmlOutput>
					<!-- Do not report bugs matching the rules defined in this file -->
					<excludeFilterFile>${scaConfigDirectory}/spotbugs-exclusions.xml</excludeFilterFile>
					<!-- Only include bugs matching the rules defined in this file -->
					<includeFilterFile />
					<!-- Analysis with high effort are more precise and can potentially 
						find more bugs at the cost of memory consumption and computation time. See 
						https://spotbugs.readthedocs.io/en/stable/effort.html for more information -->
					<effort>Default</effort>
					<!-- Minimum bug severity to report. Low reports all bugs -->
					<threshold>Low</threshold>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven-checkstyle-plugin-version}</version>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>${checkstyle-version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<!-- Do not analyze the files in the test directory -->
					<includeTestSourceDirectory>${analyzeTests}</includeTestSourceDirectory>
					<!-- Use the Artemis default configuration. Two other predefined rulesets 
						are available: Add sun_checks.xml to check for the official Oracle code conventions 
						or add google_checks.xml to check for the Google's Java Style Guide -->
					<configLocation>${scaConfigDirectory}/checkstyle-configuration.xml</configLocation>
					<!-- No documentation and not needed -->
					<enableRSS>false</enableRSS>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${maven-pmd-plugin-version}</version>
				<dependencies>
					<dependency>
						<groupId>net.sourceforge.pmd</groupId>
						<artifactId>pmd-core</artifactId>
						<version>${pmd-version}</version>
					</dependency>
					<dependency>
						<groupId>net.sourceforge.pmd</groupId>
						<artifactId>pmd-java</artifactId>
						<version>${pmd-version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<!-- Do not analyze the files in the test directory -->
					<includeTests>${analyzeTests}</includeTests>
					<!-- Bugs reported have at least this priority. 1 is the highest and 
						5 is the lowest priority -->
					<minimumPriority>5</minimumPriority>
					<!-- Add multiple rulesets for fine-grained control of file exclusions 
						per rule -->
					<rulesets>
						<ruleset>${scaConfigDirectory}/pmd-configuration.xml</ruleset>
					</rulesets>
					<!-- Minimum amount of duplicated tokens triggering the copy-paste detection -->
					<minimumTokens>60</minimumTokens>
					<!-- Ignore literal value differences when evaluating a duplicate block. 
						If true, foo=42; and foo=43; will be seen as equivalent -->
					<ignoreLiterals>true</ignoreLiterals>
					<!-- Similar to ignoreLiterals but for identifiers, i.e. variable names, 
						methods names. If activated, most tokens will be ignored so minimumTokens 
						must be lowered significantly -->
					<ignoreIdentifiers>false</ignoreIdentifiers>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
